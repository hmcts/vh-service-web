parameters:
  - name: PackageApp
    displayName: Package App
    type: boolean
    default: true

  - name: PackageACTests
    displayName: Package Acceptance Tests
    type: boolean
    default: true

  - name: RunUnitTests
    displayName: Run Unit Tests
    type: boolean
    default: true

  - name: RunIntegTests
    displayName: Run Integration Tests
    type: boolean
    default: true

  - name: RunSonarCloudTests
    displayName: Run Sonar Cloud Analysis
    type: boolean
    default: true

  - name: RunMutationTests
    displayName: Run Mutation Tests
    type: boolean
    default: true

  - name: RunACTests
    displayName: Run Acceptance Tests
    type: boolean
    default: true

  - name: RunNodeTests
    displayName: Run Node Tests
    type: boolean
    default: true

  - name: testSettings
    type: object
    default:
      # AzureAd
    - name: AzureAd:AppInsightsKey
      value: vh-core-infra-AppInsightsKey
      secret: true
    - name: AzureAd:BaseVideoUrl
      value: $(video_blob_url)
    - name: AzureAd:ClientId
      value: vh-service-web-appid-v2
      secret: true
    - name: AzureAd:ClientSecret
      value: vh-service-web-key-v2
      secret: true
    - name: AzureAd:PostLogoutRedirectUri
      slot: true
      value: $(service_web_url)logout
    - name: AzureAd:RedirectUri
      slot: true
      value: $(service_web_url)home
    - name: AzureAd:TenantId
      value: tenantid
      secret: true
    - name: AzureAd:UserApiClientId
      value: vh-user-api-appid
      secret: true
    - name: AzureAd:UserApiClientSecret
      value: vh-user-api-key
      secret: true

    # Kinly
    - name: KinlyConfiguration:CallbackSecret
      value: $(CallbackKey)
    - name: KinlyConfiguration:ApiSecret
      value: $(KinlyApiKey)
    - name: KinlyConfiguration:SelfTestApiSecret
      value: $(SelfTestApiKey)

    # Testing
    - name: TestUserSecrets:TestUsernameStem
      value: $(TestUserSecrets:TestUsernameStem)
    - name: TestUserSecrets:TestUserPassword
      value: $(TestUserSecrets:TestApiUserPassword)

    # VhServices
    - name: VhServices:BookingsApiResourceId
      value: vh-bookings-api-identifieruris
      secret: true
    - name: VhServices:BookingsApiUrl
      value: $(bookings_api_url)
    - name: VhServices:UserApiResourceId
      value: vh-user-api-identifieruris
      secret: true
    - name: VhServices:UserApiUrl
      value: $(user_api_url)
    - name: VhServices:TestApiUrl
      value: $(test_api_url)
    - name: VhServices:TestApiResourceId
      value: vh-test-api-identifieruris
      secret: true      
    - name: VhServices:VideoApiResourceId
      value: vh-video-api-identifieruris
      secret: true
    - name: VhServices:VideoApiUrl
      value: $(video_api_url)
    - name: VhServices:VideoWebUrl
      value: $(video_web_url)
    - name: VhServices:KinlySelfTestScoreEndpointUrl
      value: $(KinlySelfTestApiUrl)/testcall
    - name: VhServices:PexipSelfTestNodeUri
      value: $(PexipSelfTestNode)
    - name: VhServices:ServiceWebUrl
      slot:
        deployment:
          value: $(service_web_url_staging)
        active:
          value: $(service_web_url)
    - name: VhServices:EnableMobileSupport
      value: $(EnableMobileSupport)

    # SauceLabs
    - name: Saucelabs:Username
      value: $(Saucelabs:Username)
    - name: Saucelabs:AccessKey
      value: $(Saucelabs:AccessKey)
    - name: Saucelabs:RealDeviceApiKey
      value: $(RealDeviceApiKey)

  - name: appSettings
    type: object
    default:
    - name: ApplicationInsights:InstrumentationKey
      value: vh-core-infra-AppInsightsKey
      secret: true
    - name: AppInsightsKey
      value: vh-core-infra-AppInsightsKey
      secret: true
    - name: IsLive
      value: $(IsLive)

    # AzureAd
    - name: AzureAd:BaseVideoUrl
      value: $(video_blob_url)
    - name: AzureAd:ClientId
      value: vh-service-web-appid-v2
      secret: true
    - name: AzureAd:ClientSecret
      value: vh-service-web-key-v2
      secret: true
    - name: AzureAd:PostLogoutRedirectUri
      slot:
        deployment:
          value: $(service_web_url_staging)logout
        active:
          value: $(service_web_url)logout
    - name: AzureAd:RedirectUri
      slot:
        deployment:
          value: $(service_web_url_staging)home
        active:
          value: $(service_web_url)home
    - name: AzureAd:TenantId
      value: tenantid
      secret: true
    - name: AzureAd:UserApiClientId
      value: vh-user-api-appid
      secret: true
    - name: AzureAd:UserApiClientSecret
      value: vh-user-api-key
      secret: true

    # Kinly
    - name: KinlyConfiguration:CallbackSecret
      value: $(CallbackKey)
    - name: KinlyConfiguration:ApiSecret
      value: $(KinlyApiKey)
    - name: KinlyConfiguration:SelfTestApiSecret
      value: $(SelfTestApiKey)

    # Testing
    - name: TestUserSecrets:TestUsernameStem
      value: $(TestUserSecrets:TestUsernameStem)
    - name: TestUserSecrets:TestUserPassword
      value: $(TestUserSecrets:TestApiUserPassword)

    # VhServices
    - name: VhServices:BookingsApiResourceId
      value: vh-bookings-api-identifieruris
      secret: true
    - name: VhServices:BookingsApiUrl
      value: $(bookings_api_url)
    - name: VhServices:UserApiResourceId
      value: vh-user-api-identifieruris
      secret: true
    - name: VhServices:UserApiUrl
      value: $(user_api_url)
    - name: VhServices:VideoApiResourceId
      value: vh-video-api-identifieruris
      secret: true
    - name: VhServices:VideoApiUrl
      value: $(video_api_url)
    - name: VhServices:VideoWebUrl
      value: $(video_web_url)
    - name: VhServices:KinlySelfTestScoreEndpointUrl
      value: $(KinlySelfTestApiUrl)/testcall
    - name: VhServices:PexipSelfTestNodeUri
      value: $(PexipSelfTestNode)
    - name: VhServices:EnableMobileSupport
      value: $(EnableMobileSupport)

variables:
  - group: vh-domains-and-urls
  - group: vh-apps-settings-generic
  - group: vh-service-web
  - group: vh-preview
  - group: vh test users
  - group: Saucelabs
  - group: vh-wowza-dev
  - group: KinlyConfiguration_Test

trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*

pr:
  branches:
    include:
    - master

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts
  containers:
  - container: dotnetsdk
    image: sspublicsbox.azurecr.io/vh/dotnet-angular:3.1.102
    endpoint: sspublicsbox
  - container: dotnetsdk-cipipeline
    image: sspublicsbox.azurecr.io/vh/dotnet-angular-cipipeline:3.1.102
    endpoint: sspublicsbox
  - container: node
    image: node:lts-alpine

extends:
  template: stages\dotnet-package.yml@templates
  parameters:
    coreProjectPath: ServiceWebsite/ServiceWebsite
    nodeProjectPath: ServiceWebsite/ServiceWebsite/ClientApp
    PackageApp: ${{ parameters.PackageApp }}
    PackageAcceptanceTests: ${{ parameters.PackageACTests }}
    packageManagers:
      - nuget
      - npm
    Test: ${{ or(parameters.RunUnitTests, parameters.RunIntegTests, parameters.RunMutationTests) }}
    testParameters:
      variables:
      - name: EnableMobileSupport
        value: false
        env: 
          - Prod
          - Preprod
      - name: EnableMobileSupport
        value: true
        env: 
         - Preview
         - Dev
         - AAT
         - Sandbox
         - Test1
         - Test2
      coreProjectPath: ServiceWebsite/ServiceWebsite
      nodeProjectPath: ServiceWebsite/ServiceWebsite/ClientApp
      RunNode: true
      unitTestProjectPath: ServiceWebsite/ServiceWebsite.UnitTests
      integTestProjectPath: ServiceWebsite/ServiceWebsite.IntegrationTests
      secrets_KeyVault: $(pr_Secret_KeyVault)
      secrets_Subscription: $(pr_Secret_Subscription)
      RunUnitTests: ${{ parameters.RunUnitTests }}
      RunIntegrationTests: ${{ parameters.RunIntegTests }}
      RunSonarCloud: ${{ parameters.RunSonarCloudTests }}
      RunStryker: ${{ parameters.RunMutationTests }}
      IntegrationTestSettings:
        - ${{ each setting in parameters.testSettings }}:
          - name: ${{ setting.name }}
            value: ${{ setting.value }}
            secret: ${{ setting.secret }}
      coverletCoverageExclusions:
        - "[ServiceWebsite.BookingApi.Client]*"
        - "[ServiceWebsite.UserAPI.Client]*"
        - "[ServiceWebsite.VideoAPI.Client]*"
        - "[*]ServiceWebsite.Swagger.*"
        - "[ServiceWebsite]ServiceWebsite.Program"
        - "[ServiceWebsite]ServiceWebsite.Startup"
        - "[ServiceWebsite]ServiceWebsite.ConfigureServicesExtensions"
        - "[*]ServiceWebsite.AcceptanceTests/*"
      sonarCloud_ExtraProperties: |
        sonar.exclusions=**/node_modules/**,**/*.spec.ts,*.spec.ts,**/ClientApp/*,**/ClientApp/src/*,**/ClientApp/coverage/**/*,**/*.js,**/ServiceWebsite/Security/*.cs,**/ServiceWebsite/Swagger/*.cs,**/ConfigureServicesExtensions.cs,**/Startup.cs,**/Program.cs
        sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/ServiceWebsite/ServiceWebsite/ClientApp/coverage/lcov.info,**/lcov.info
        sonar.typescript.exclusions=**/node_modules/**,**/typings.d.ts,**/main.ts,**/environments/environment*.ts,**/*routing.module.ts,**/api-client.ts,**/app-insights-logger.service.ts
        sonar.coverage.exclusions=**/app-insights-logger.service.ts,**/console-logger.ts,**/testing/**/*,**/mic-visualiser.component.ts
        sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/Coverage/coverage.opencover.xml
        sonar.issue.ignore.multicriteria=e1,e2
        sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S107
        sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts
        sonar.issue.ignore.multicriteria.e2.ruleKey=typescript:S1186
        sonar.issue.ignore.multicriteria.e2.resourceKey=**/testing/**/*.ts
      StrykerBreak: 75
    ACTest: ${{ parameters.RunACTests }}
    NodeTest: ${{ parameters.RunNodeTests }}
    nodeTestParameters:
      coreProjectPath: ServiceWebsite/ServiceWebsite/ClientApp

    releaseParameters:
      variables:
      - name: EnableMobileSupport
        value: false
        env: 
          - Prod
          - Preprod
      - name: EnableMobileSupport
        value: true
        env: 
         - Preview
         - Dev
         - AAT
         - Sandbox
         - Test1
         - Test2
      environment: Preview

      subscription: $(pr_Subscription)
      secrets_KeyVault: $(pr_Secret_KeyVault)
      secrets_Subscription: $(pr_Secret_Subscription)
      devOpsResource: vh_service_web
      appName: vh-service-web-$(environment)
      resourceGroup: vh-service-web-$(environment)
      appSettings: ${{ parameters.appSettings }}
      testCaseFilter: TestCategory=smoketest
      dependentApps:
        - name: vh-user-api-$(environment)
          resourceGroup: vh-user-api-$(environment)
          healthEndpoint: $(user_api_url)healthcheck/health
        - name: vh-bookings-api-$(environment)
          resourceGroup: vh-bookings-api-$(environment)
          healthEndpoint: $(bookings_api_url)healthcheck/health
        - name: vh-video-api-$(environment)
          resourceGroup: vh-video-api-$(environment)
          healthEndpoint: $(video_api_url)healthcheck/health
        - name: vh-test-api-$(environment)
          resourceGroup: vh-test-api-$(environment)
          healthEndpoint: $(test_api_url)health/health
      acceptanceTestSettings:
        - ${{ each setting in parameters.testSettings }}:
          - ${{ insert }}: ${{ setting }}
